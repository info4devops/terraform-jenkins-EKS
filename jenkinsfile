pipeline {
    agent any
    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION = "us-east-1"
    }
    
    stages {
        
        stage("Checkout SCM") {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    extensions: [],
                    userRemoteConfigs: [[url: 'https://github.com/info4devops/terraform-jenkins-EKS.git']]
                ])
            }
        }
        
        stage("Initializing Terraform") {
            steps {
                dir('EKS_Cluster') {
                    sh 'terraform init'
                }
            }
        }
        
        stage("Formatting Terraform Code") {
            steps {
                dir('EKS_Cluster') {
                    sh 'terraform fmt'
                }
            }
        }
        
        stage("Validating Terraform") {
            steps {
                dir('EKS_Cluster') {
                    sh 'terraform validate'
                }
            }
        }
        
        stage("Previewing The Infra using Terraform") {
            steps {
                dir('EKS_Cluster') {
                    sh 'terraform plan'
                }
            }
        }
        
        stage("Creating/Destroying EKS Cluster") {
            steps {
                script {
                    def action = params.ACTION ?: 'apply' // Default to 'apply' if no parameter is passed
                    dir('EKS_Cluster') {
                        sh "terraform ${action} --auto-approve"
                    }
                }
            }
        }
        
        stage("Deploying Nginx Server") {
            steps {
                dir('EKS_Cluster/ConfigurationFiles') {
                    sh 'aws eks update-kubeconfig --name my-eks-cluster'
                    sh 'kubectl apply -f deployment.yml'
                }
            }
        }
    }
}
