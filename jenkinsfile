pipeline {
    agent any
    environment{
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION = "us-east-1"
    }
    
    stages {
        
        stage ("Checkout SCM") {
            steps {
                script {
                    checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/info4devops/terraform-jenkins-EKS.git']])
                }
            }
        }
        
        stage ("Initializing Terraform") {
            steps {
                script {
                    dir('EKS_Cluster'){
                        sh 'terraform init'
                        
                    }
                }
            }
        }
        
        stage ("Formatting Terraform Code") {
            steps {
                script {
                    dir('EKS_Cluster'){
                        sh 'terraform fmt'
                        
                    }
                }
            }
        }
        
        stage ("Validating Terraform") {
            steps {
                script {
                    dir('EKS_Cluster'){
                        sh 'terraform validate'
                        
                    }
                }
            }
        }
        
        stage ("Previewing The Infra using Terraform") {
            steps {
                script {
                    dir('EKS_Cluster'){
                        sh 'terraform plan'
                        
                    }
                }
            }
        }
        
        stage ("Creating/Destroying EKS Cluster") {
            steps {
                script {
                    dir('EKS_Cluster'){
                        sh 'terraform $action --auto-approve'
                        
                    }
                }
            }
        }
        
        stage ("Deploying Nginx Server") {
            steps {
                script {
                    dir('EKS_Cluster/ConfigurationFiles'){
                        sh 'aws eks update-kubeconfig --name my-eks-cluster'
                        sh 'kubectl apply -f deployment.yml'
                        
                    }
                }
            }
        }
        
        
        
        
    }
    
}